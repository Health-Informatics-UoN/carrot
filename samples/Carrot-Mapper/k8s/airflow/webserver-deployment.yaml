# Airflow Scheduler Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: carrot-mapper
  labels:
    app: airflow-webserver
    component: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
        component: airflow
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:14
          command:
            - sh
            - -c
            - |
              until pg_isready -h postgres-service -p 5432 -U postgres; do
                echo "Waiting for postgres..."
                sleep 2
              done
        - name: wait-for-minio
          image: curlimages/curl:latest
          command:
            - sh
            - -c
            - |
              until curl -f http://minio-service:9000/minio/health/live; do
                echo "Waiting for minio..."
                sleep 2
              done
        - name: wait-for-api
          image: curlimages/curl:latest
          command:
            - sh
            - -c
            - |
              until curl -f http://api-service:8000/health; do
                echo "Waiting for API..."
                sleep 5
              done
      containers:
        - name: airflow-webserver
          image: ghcr.io/health-informatics-uon/carrot/airflow-webserver:3.1.0
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: AIRFLOW_ADMIN_USERNAME
              value: "admin"
            - name: AIRFLOW_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: airflow-secrets
                  key: AIRFLOW_ADMIN_PASSWORD
          envFrom:
            - configMapRef:
                name: airflow-config
            - secretRef:
                name: airflow-secrets
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
