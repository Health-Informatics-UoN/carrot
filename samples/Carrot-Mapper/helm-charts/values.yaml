# Global values for the carrot-mapper umbrella chart
global:
  namespace: carrot-mapper-k8s

# Settings for minio
minio:
  # Override the fullname to match the short service name which is fixed in the deployment.
  # This value shouldn't be changed.
  fullnameOverride: minio-service
  auth:
    # Use password files to avoid storing the password in the values.yaml file.
    usePasswordFiles: false
    rootUser: "minioadmin"
    rootPassword: "minioadmin"
  # Enable persistence to avoid losing data when the pod is restarted.
  persistence:
    enabled: true
    size: 8Gi

# Settings for postgresql
postgresql:
  # Override the fullname to match the short service name which is fixed in the deployment.
  # This value shouldn't be changed.
  fullnameOverride: postgres-service
  # Setting the auth for db. Port 5432 is the default port for postgresql.
  auth:
    username: postgres
    password: postgres
    database: postgres
  # Enable persistence to avoid losing data when the pod is restarted.
  primary:
    persistence:
      enabled: true
      size: 10Gi

# Settings for omop-lite
omop-lite:
  image:
    repository: ghcr.io/health-informatics-uon/omop-lite
    pullPolicy: IfNotPresent
    tag: ""
  # Job configuration
  job:
    restartPolicy: OnFailure
    activeDeadlineSeconds: 3600 # 1 hour
    backoffLimit: 3
  dependencies:
    # Below should be the same as the postgresql auth values above.
    postgres:
      user: postgres
      password: postgres
      name: postgres
  # OMOP Lite application configuration
  config:
    schemaName: "omop"
    dataDir: "vocabs"
    synthetic: "true"
  # Resource allocation
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 250m
      memory: 512Mi
  # Volume configuration for vocabulary files
  volumes:
    enabled: false # Set to true if volumes are enabled
  # Volume mounts configuration
  volumeMounts:
    enabled: false # Set to true if volumes are enabled

api:
  image:
    repository: ghcr.io/health-informatics-uon/carrot/backend
    pullPolicy: IfNotPresent
    tag: "3.2.0"

  service:
    type: LoadBalancer
    port: 8000
    targetPort: 8000
    name: api

  ingress:
    enabled: false

  # Resource limits and requests
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

  # Environment variables for the api service
  config:
    DB_ENGINE: "django.db.backends.postgresql"
    DB_HOST: "postgres-service"
    DB_PORT: "5432"
    DB_NAME: "postgres"
    DB_USER: "postgres"
    MINIO_ACCESS_KEY: "minioadmin"
    DEBUG: "True"
    WORKER_SERVICE_TYPE: "airflow"
    AIRFLOW_ADMIN_USERNAME: "admin"
    DATA_UPLOAD_MAX_MEMORY_SIZE: "10485760"
    SUPERUSER_DEFAULT_USERNAME: "admin"

  # Secret environment variables
  secrets:
    DB_PASSWORD: "postgres"
    SECRET_KEY: "secret"
    SIGNING_KEY: "secret"
    MINIO_SECRET_KEY: "minioadmin"
    AIRFLOW_ADMIN_PASSWORD: "admin"
    SUPERUSER_DEFAULT_PASSWORD: "admin"

frontend:
  service:
    type: LoadBalancer
