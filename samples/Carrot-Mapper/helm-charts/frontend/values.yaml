# Global settings
namespace: carrot-mapper-k8s

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/health-informatics-uon/carrot/frontend
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "3.2.0"

podLabels:
  component: frontend

# Init containers configuration
initContainers:
  waitForApi:
    enabled: true
    image: curlimages/curl:latest
    serviceUrl: "http://api-service:8000/health"
  waitForAirflow:
    enabled: false
    image: curlimages/curl:latest
    serviceUrl: "http://airflow-webserver-service:8080/health"

# Application command
command:
  - node
  - server.js

# Configuration data
config:
  BACKEND_URL: "http://api-service:8000"
  BACKEND_ORIGIN: "api-service:8000"
  NEXTAUTH_URL: "http://localhost:3000/"
  NEXTAUTH_BACKEND_URL: "http://api-service:8000/api/"
  NODE_ENV: "development"
  BODY_SIZE_LIMIT: "20971520"
  NEXT_PUBLIC_ENABLE_REUSE_TRIGGER_OPTION: "true"
  NEXT_PUBLIC_ENABLE_AI_RECOMMENDATION: "true"
  NEXT_PUBLIC_RECOMMENDATION_SERVICE_NAME: "unison"
  RECOMMENDATION_SERVICE: "unison"
  UNISON_API_KEY: "unison-api-key"
  UNISON_BASE_URL: "https://api.hyperunison.com/api/public/suggester/generate"

# Secret data
secrets:
  NEXTAUTH_SECRET: "verycomplexsecretkey"

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: LoadBalancer
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 3000
  targetPort: 3000
  name: http

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false

# Resource configuration
resources:
  requests:
    memory: "256Mi"
    cpu: "250m"
  limits:
    memory: "1Gi"
    cpu: "500m"

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 30

readinessProbe:
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 10
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
